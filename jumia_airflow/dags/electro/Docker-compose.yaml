# docker-compose.yaml
x-airflow-common: &airflow-common
  image: jumia-airflow:latest
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__WEBSERVER__SECRET_KEY: 'your-secret-key-here'
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./scripts:/opt/airflow/scripts
    - type: bind
      source: ./
      target: /data/jumia
  depends_on:
    postgres:
      condition: service_healthy


services:
 postgres:
   image: postgres:13
   environment:
     POSTGRES_USER: airflow
     POSTGRES_PASSWORD: airflow
     POSTGRES_DB: airflow
   volumes:
     - postgres-db-volume:/var/lib/postgresql/data
   healthcheck:
     test: ["CMD", "pg_isready", "-U", "airflow"]
     interval: 5s
     retries: 5
     timeout: 5s
   restart: always

 init:
   <<: *airflow-common
   container_name: airflow-init
   entrypoint: /bin/bash
   command:
     - -c
     - |
       mkdir -p /data/jumia
       airflow db init &&
       airflow users create \
         --username admin \
         --firstname admin \
         --lastname admin \
         --role Admin \
         --email admin@example.com \
         --password admin
   depends_on:
     postgres:
       condition: service_healthy

 webserver:
   <<: *airflow-common
   command: webserver
   ports:
     - "8080:8080"
   healthcheck:
     test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
     interval: 10s
     timeout: 10s
     retries: 5
   restart: always
   depends_on:
     - init

 scheduler:
   <<: *airflow-common
   command: scheduler
   healthcheck:
     test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
     interval: 10s
     timeout: 10s
     retries: 5
   restart: always
   depends_on:
     - init

volumes:
 postgres-db-volume: